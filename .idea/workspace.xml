<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="486bdc94-58a0-47fb-a875-1e4008e24fd1" name="Changes" comment="Création des fichiers/dossier tempo">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/__init__/func.go" beforeDir="false" afterPath="$PROJECT_DIR$/__init__/func.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/globals/globals.go" beforeDir="false" afterPath="$PROJECT_DIR$/globals/globals.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../../Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="27OTRPMhDkAACpQVLlFmorZ3OkL" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
    "WebServerToolWindowFactoryState": "false",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "C:/Users/XD5965/go/src/FilesDIR",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\XD5965\go\src\FilesDIR" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.FilesDIR">
    <configuration name="FilesDIR" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true">
      <module name="FilesDIR" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="FilesDIR" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="BenchmarkRunSearch in FilesDIR/task" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="FilesDIR" />
      <working_directory value="$PROJECT_DIR$/task" />
      <kind value="PACKAGE" />
      <package value="FilesDIR/task" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gobench" />
      <pattern value="^\QBenchmarkRunSearch\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGenTempDir in FilesDIR/task" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="FilesDIR" />
      <working_directory value="$PROJECT_DIR$/task" />
      <kind value="PACKAGE" />
      <package value="FilesDIR/task" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGenTempDir\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRunSearch in FilesDIR/task (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="FilesDIR" />
      <working_directory value="$PROJECT_DIR$/task" />
      <kind value="PACKAGE" />
      <package value="FilesDIR/task" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRunSearch\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRunSearch in FilesDIR/task" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="FilesDIR" />
      <working_directory value="$PROJECT_DIR$/task" />
      <kind value="PACKAGE" />
      <package value="FilesDIR/task" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRunSearch\E$" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.FilesDIR" />
      <item itemvalue="Go Test.TestGenTempDir in FilesDIR/task" />
      <item itemvalue="Go Test.TestRunSearch in FilesDIR/task (1)" />
      <item itemvalue="Go Test.BenchmarkRunSearch in FilesDIR/task" />
      <item itemvalue="Go Test.TestRunSearch in FilesDIR/task" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.FilesDIR" />
        <item itemvalue="Go Test.TestGenTempDir in FilesDIR/task" />
        <item itemvalue="Go Test.TestRunSearch in FilesDIR/task (1)" />
        <item itemvalue="Go Test.BenchmarkRunSearch in FilesDIR/task" />
        <item itemvalue="Go Test.TestRunSearch in FilesDIR/task" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Ajout du waitGroup" />
    <MESSAGE value="Ajout du timer" />
    <MESSAGE value="test" />
    <MESSAGE value="test boost vitesse" />
    <MESSAGE value="Boucle ultra rapide en limitant les thread" />
    <MESSAGE value="Création des logs" />
    <MESSAGE value="Optimisation de vitesse/ correction bug" />
    <MESSAGE value="Log dump création" />
    <MESSAGE value="Création des fichiers/dossier tempo" />
    <option name="LAST_COMMIT_MESSAGE" value="Création des fichiers/dossier tempo" />
  </component>
  <component name="VgoProject">
    <integration-enabled>false</integration-enabled>
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/FilesDIR$TestLoopDirsFiles.out" NAME="TestLoopDirsFiles Coverage Results" MODIFIED="1649233651525" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>