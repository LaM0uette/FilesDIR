Index: pkg/compiler.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package pkg\r\n\r\nimport (\r\n\t\"FilesDIR/display\"\r\n\t\"FilesDIR/globals\"\r\n\t\"FilesDIR/loger\"\r\n\t\"FilesDIR/task\"\r\n\t\"fmt\"\r\n\t\"github.com/360EntSecGroup-Skylar/excelize\"\r\n\t\"io/ioutil\"\r\n\t\"os\"\r\n\t\"path/filepath\"\r\n\t\"strings\"\r\n\t\"sync\"\r\n\t\"time\"\r\n)\r\n\r\ntype compilData struct {\r\n\tPath string\r\n\tId   int\r\n}\r\n\r\nvar (\r\n\twg   sync.WaitGroup\r\n\tjobs = make(chan compilData)\r\n\tWb   = &excelize.File{}\r\n\tId   int\r\n)\r\n\r\n//...\r\n// ACTIONS:\r\nfunc ClsTempFiles() {\r\n\t_ = os.RemoveAll(globals.FolderLogs)\r\n\t_ = os.RemoveAll(globals.FolderDumps)\r\n\t_ = os.RemoveAll(globals.FolderExports)\r\n}\r\n\r\nfunc CompilerFicheAppuiFt(path string) {\r\n\r\n\tloger.BlankDateln(display.DrawInitCompiler())\r\n\ttime.Sleep(800 * time.Millisecond)\r\n\r\n\tloger.Blankln(display.DrawRunCompiler())\r\n\r\n\tId = 1\r\n\r\n\tWb = excelize.NewFile()\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"A1\", \"Chemin de la fiche\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"B1\", \"Adresse\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"C1\", \"Ville\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"D1\", \"Num appui\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"E1\", \"Type appui\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"F1\", \"Type_n_app\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"G1\", \"Nature TVX\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"H1\", \"Etiquette jaune\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"I1\", \"Effort avant ajout câble\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"J1\", \"Effort après ajout câble\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"K1\", \"Effort nouveau appui\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"L1\", \"Latitude\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"M1\", \"Longitude\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"N1\", \"Opérateur\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"O1\", \"Appui utilisable en l'état\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"P1\", \"Environnement\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"Q1\", \"Commentaire appui\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"R1\", \"Commentaire global\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"S1\", \"Proxi ENEDIS\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"T1\", \"id_metier_\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"U1\", \"Date\")\r\n\t_ = Wb.SetCellValue(\"Sheet1\", \"V1\", \"PB\")\r\n\r\n\tfor w := 1; w <= 300; w++ {\r\n\t\tgo workerFicheAppuiFt()\r\n\t}\r\n\r\n\tfiles, err := ioutil.ReadDir(path)\r\n\tif err != nil {\r\n\t\tloger.Crashln(fmt.Sprintf(\"Crash with this path: %s\", path))\r\n\t}\r\n\r\n\tfor _, file := range files {\r\n\t\tif !file.IsDir() && !strings.Contains(file.Name(), \"__COMPILATION__\") {\r\n\r\n\t\t\texcelFile := filepath.Join(path, file.Name())\r\n\t\t\tf, err := excelize.OpenFile(excelFile)\r\n\t\t\tif err != nil {\r\n\t\t\t\tloger.Errorln(fmt.Sprintf(\"Crash with this files: %s\", excelFile))\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\r\n\t\t\trows, err := f.GetRows(\"Sheet1\")\r\n\t\t\tif err != nil {\r\n\t\t\t\tloger.Errorln(err)\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\r\n\t\t\tfor ir, row := range rows {\r\n\t\t\t\tif ir == 0 {\r\n\t\t\t\t\tcontinue\r\n\t\t\t\t}\r\n\r\n\t\t\t\tr := row[3]\r\n\r\n\t\t\t\tgo func() {\r\n\t\t\t\t\twg.Add(1)\r\n\t\t\t\t\tId++\r\n\r\n\t\t\t\t\ta := compilData{\r\n\t\t\t\t\t\tPath: r,\r\n\t\t\t\t\t\tId:   Id,\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tjobs <- a\r\n\t\t\t\t}()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twg.Wait()\r\n\ttime.Sleep(1 * time.Second)\r\n\r\n\tloger.BlankDateln(display.DrawEndCompiler())\r\n\r\n\tloger.BlankDateln(fmt.Sprintf(\"Nombre de fiches compilées : %v\", Id-1))\r\n\ttime.Sleep(800 * time.Millisecond)\r\n\r\n\tif err := Wb.SaveAs(filepath.Join(path, fmt.Sprintf(\"__COMPILATION__%v.xlsx\", time.Now().Format(\"20060102150405\")))); err != nil {\r\n\t\tfmt.Println(err)\r\n\t}\r\n\r\n\tloger.Blankln(display.DrawSaveExcel())\r\n\tfmt.Println()\r\n\ttime.Sleep(200 * time.Millisecond)\r\n}\r\n\r\n//...\r\n//WORKER:\r\nfunc workerFicheAppuiFt() {\r\n\tfor job := range jobs {\r\n\t\tloger.BlankDateln(fmt.Sprintf(\"N°%v | Files: %s\", job.Id, filepath.Base(job.Path)))\r\n\r\n\t\texcelFile := job.Path\r\n\t\tf, err := excelize.OpenFile(excelFile)\r\n\t\tif err != nil {\r\n\t\t\tloger.Errorln(fmt.Sprintf(\"Crash with this files: %s\", filepath.Base(excelFile)))\r\n\t\t\twg.Done()\r\n\t\t\tcontinue\r\n\t\t}\r\n\r\n\t\tsht := f.GetSheetName(f.GetActiveSheetIndex())\r\n\r\n\t\tadresse, _ := f.GetCellValue(sht, \"D5\")\r\n\t\tville, _ := f.GetCellValue(sht, \"D4\")\r\n\t\tnumAppui, _ := f.GetCellValue(sht, \"D3\")\r\n\t\ttype1, _ := f.GetCellValue(sht, \"C26\")\r\n\t\ttypeNApp, _ := f.GetCellValue(sht, \"M52\")\r\n\t\tnatureTvx, _ := f.GetCellValue(sht, \"M53\")\r\n\r\n\t\tetiquetteJaune, _ := f.GetCellValue(sht, \"U12\")\r\n\t\tswitch task.StrToLower(etiquetteJaune) {\r\n\t\tcase \"oui\":\r\n\t\t\tetiquetteJaune = \"non\"\r\n\t\tcase \"non\":\r\n\t\t\tetiquetteJaune = \"oui\"\r\n\t\t}\r\n\r\n\t\teffort1, _ := f.GetCellValue(sht, \"S26\")\r\n\t\teffort2, _ := f.GetCellValue(sht, \"U26\")\r\n\t\teffort3, _ := f.GetCellValue(sht, \"W26\")\r\n\r\n\t\tlat, _ := f.GetCellValue(sht, \"P5\")\r\n\t\tlon, _ := f.GetCellValue(sht, \"P6\")\r\n\t\toperateur, _ := f.GetCellValue(sht, \"J3\")\r\n\t\tutilisableEnEtat, _ := f.GetCellValue(sht, \"W12\")\r\n\t\tenvironnement, _ := f.GetCellValue(sht, \"W52\")\r\n\t\tcommentaireEtatAppui, _ := f.GetCellValue(sht, \"F13\")\r\n\t\tcommentaireGlobal, _ := f.GetCellValue(sht, \"A55\")\r\n\t\tproxiEnedis, _ := f.GetCellValue(sht, \"W53\")\r\n\r\n\t\tinsee, _ := f.GetCellValue(sht, \"V4\")\r\n\t\tidMetier := fmt.Sprintf(\"%s/%s\", numAppui, insee)\r\n\r\n\t\tdate, _ := f.GetCellValue(sht, \"T1\")\r\n\t\tpb, _ := f.GetCellValue(sht, \"N18\")\r\n\r\n\t\t// insert value\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"A%v\", job.Id), job.Path)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"B%v\", job.Id), adresse)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"C%v\", job.Id), ville)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"D%v\", job.Id), numAppui)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"E%v\", job.Id), type1)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"F%v\", job.Id), typeNApp)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"G%v\", job.Id), natureTvx)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"H%v\", job.Id), etiquetteJaune)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"I%v\", job.Id), effort1)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"J%v\", job.Id), effort2)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"K%v\", job.Id), effort3)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"L%v\", job.Id), lat)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"M%v\", job.Id), lon)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"N%v\", job.Id), operateur)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"O%v\", job.Id), utilisableEnEtat)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"P%v\", job.Id), environnement)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"Q%v\", job.Id), commentaireEtatAppui)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"R%v\", job.Id), commentaireGlobal)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"S%v\", job.Id), proxiEnedis)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"T%v\", job.Id), idMetier)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"U%v\", job.Id), date)\r\n\t\t_ = Wb.SetCellValue(\"Sheet1\", fmt.Sprintf(\"V%v\", job.Id), pb)\r\n\r\n\t\twg.Done()\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pkg/compiler.go b/pkg/compiler.go
--- a/pkg/compiler.go	(revision ffceff2a9c00549d90f4b1e26d77ee4af0a45ed7)
+++ b/pkg/compiler.go	(date 1649670884868)
@@ -68,7 +68,7 @@
 	_ = Wb.SetCellValue("Sheet1", "U1", "Date")
 	_ = Wb.SetCellValue("Sheet1", "V1", "PB")
 
-	for w := 1; w <= 300; w++ {
+	for w := 1; w <= 500; w++ {
 		go workerFicheAppuiFt()
 	}
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"ALL\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"486bdc94-58a0-47fb-a875-1e4008e24fd1\" name=\"Changes\" comment=\"correct bug\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pkg/compiler.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pkg/compiler.go\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Go File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"GOROOT\" url=\"file://$PROJECT_DIR$/../../../../../Program Files/Go\" />\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GoLibraries\">\r\n    <option name=\"indexEntireGoPath\" value=\"true\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"27OTRPMhDkAACpQVLlFmorZ3OkL\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;configurable..is.expanded&quot;: &quot;false&quot;,\r\n    &quot;configurable.GoLibrariesConfigurable.is.expanded&quot;: &quot;true&quot;,\r\n    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,\r\n    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/XD5965/go/src/__TEST__&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;go.vgo&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\XD5965\\go\\src\\FilesDIR\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Go Test.TestRunSearch in FilesDIR/task\">\r\n    <configuration name=\"FilesDIR\" type=\"GoApplicationRunConfiguration\" factoryName=\"Go Application\" temporary=\"true\">\r\n      <module name=\"FilesDIR\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <kind value=\"FILE\" />\r\n      <package value=\"FilesDIR\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$/main.go\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"TestGenTempDir in FilesDIR/task\" type=\"GoTestRunConfiguration\" factoryName=\"Go Test\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"FilesDIR\" />\r\n      <working_directory value=\"$PROJECT_DIR$/task\" />\r\n      <kind value=\"PACKAGE\" />\r\n      <package value=\"FilesDIR/task\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$\" />\r\n      <framework value=\"gotest\" />\r\n      <pattern value=\"^\\QTestGenTempDir\\E$\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"TestRunSearch in FilesDIR/task\" type=\"GoTestRunConfiguration\" factoryName=\"Go Test\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"FilesDIR\" />\r\n      <working_directory value=\"$PROJECT_DIR$/task\" />\r\n      <kind value=\"PACKAGE\" />\r\n      <package value=\"FilesDIR/task\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$\" />\r\n      <framework value=\"gotest\" />\r\n      <pattern value=\"^\\QTestRunSearch\\E$\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"TestStr in FilesDIR/task\" type=\"GoTestRunConfiguration\" factoryName=\"Go Test\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"FilesDIR\" />\r\n      <working_directory value=\"$PROJECT_DIR$/task\" />\r\n      <kind value=\"PACKAGE\" />\r\n      <package value=\"FilesDIR/task\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$\" />\r\n      <framework value=\"gotest\" />\r\n      <pattern value=\"^\\QTestStr\\E$\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"go test FilesDIR/task\" type=\"GoTestRunConfiguration\" factoryName=\"Go Test\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"FilesDIR\" />\r\n      <working_directory value=\"$PROJECT_DIR$/task\" />\r\n      <kind value=\"PACKAGE\" />\r\n      <package value=\"FilesDIR/task\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$\" />\r\n      <framework value=\"gotest\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Go Build.FilesDIR\" />\r\n      <item itemvalue=\"Go Test.TestStr in FilesDIR/task\" />\r\n      <item itemvalue=\"Go Test.go test FilesDIR/task\" />\r\n      <item itemvalue=\"Go Test.TestGenTempDir in FilesDIR/task\" />\r\n      <item itemvalue=\"Go Test.TestRunSearch in FilesDIR/task\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Go Test.TestRunSearch in FilesDIR/task\" />\r\n        <item itemvalue=\"Go Build.FilesDIR\" />\r\n        <item itemvalue=\"Go Test.go test FilesDIR/task\" />\r\n        <item itemvalue=\"Go Test.TestStr in FilesDIR/task\" />\r\n        <item itemvalue=\"Go Test.TestGenTempDir in FilesDIR/task\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Ajout du waitGroup\" />\r\n    <MESSAGE value=\"Ajout du timer\" />\r\n    <MESSAGE value=\"test\" />\r\n    <MESSAGE value=\"test boost vitesse\" />\r\n    <MESSAGE value=\"Boucle ultra rapide en limitant les thread\" />\r\n    <MESSAGE value=\"Création des logs\" />\r\n    <MESSAGE value=\"Optimisation de vitesse/ correction bug\" />\r\n    <MESSAGE value=\"Log dump création\" />\r\n    <MESSAGE value=\"Création des fichiers/dossier tempo\" />\r\n    <MESSAGE value=\"création du fichier d'export excel\" />\r\n    <MESSAGE value=\"Ajout des flags - Devil\" />\r\n    <MESSAGE value=\"Ajout des flags\" />\r\n    <MESSAGE value=\"Ajout des filtres de recherche\" />\r\n    <MESSAGE value=\"ajout du mode super\" />\r\n    <MESSAGE value=\"ajout du mode blacklist\" />\r\n    <MESSAGE value=\"modif des tests\" />\r\n    <MESSAGE value=\"benchmark\" />\r\n    <MESSAGE value=\"correct bug\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"correct bug\" />\r\n  </component>\r\n  <component name=\"VgoProject\">\r\n    <integration-enabled>false</integration-enabled>\r\n    <settings-migrated>true</settings-migrated>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/FilesDIR$TestLoopDirsFiles.out\" NAME=\"TestLoopDirsFiles Coverage Results\" MODIFIED=\"1649233651525\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"GoCoverage\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ffceff2a9c00549d90f4b1e26d77ee4af0a45ed7)
+++ b/.idea/workspace.xml	(date 1649670810799)
@@ -5,7 +5,6 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="486bdc94-58a0-47fb-a875-1e4008e24fd1" name="Changes" comment="correct bug">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/pkg/compiler.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/compiler.go" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
